// Fonts
@import url('https://fonts.googleapis.com/css2?family=Cabin&family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap');

$font-headings: 'Montserrat', sans-serif;
$font-body: 'Cabin', sans-serif;

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-headings;
}

p,
span {
  font-family: $font-body;
}

p {
  line-height: 1.5;
}

// Site Colors
$color-white: #e0e3ec;
$color-grey: #adaeb7;
$color-black: #101119;
$color-black-shade: #161822;
$color-yellow: #e9c46a;
$color-green: #52796f;

// Padding - Margin Values
$pixel-spacing: 10px;
$base-spacing: 1em;
$double-spacing: 2em;
$triple-spacing: 3em;

// Lines, border, hr
$base-thickness: 2px;

// Border-radius mixin
@mixin border-radius {
  border-radius: 10px;
}

// Set Breakpoint Sizes
@mixin for-phone-only {
  @media (max-width: 599px) {
    @content;
  }
}

@mixin for-tablet-portrait-up {
  @media (min-width: 600px) {
    @content;
  }
}

@mixin for-tablet-landscape-up {
  @media (min-width: 900px) {
    @content;
  }
}

@mixin for-desktop-up {
  @media (min-width: 1200px) {
    @content;
  }
}

@mixin for-big-desktop-up {
  @media (min-width: 1800px) {
    @content;
  }
}

// usage
//   .my-box {
//     padding: 10px;

//     @include for-desktop-up {
//       padding: 20px;
//     }
//   }

// BODY STYLES
body {
  background-color: $color-white;
  color: $color-black;
  font-size: 16px;
}

// HEADER STYLES
header {
  display: grid;
  grid-template-columns: 25% 1fr 25%;
  height: 100px;
  background-color: $color-white;

  .logo {
    grid-column: 1/2;
    max-width: 100%;
    align-self: center;
    justify-self: center;

    a {
      text-decoration: none;
      color: $color-black;

      .logo-content {
        font-size: 3em;
        margin: 0;

        .logo-content-2 {
          color: $color-grey;
        }
      }
    }
  }
}

// Styles for light and dark mode toggle.
// Change $scale to adjust size of button
// Change $time to adjust transition time.
$scale: 60px;
$time: 1s;

// A Template (Mixin) of all common codes, to stop repitition
@mixin common($a, $b, $c, $d, $e, $f, $g) {
  display: $a;
  flex-direction: $b;
  justify-content: $c;
  align-items: $d;
  width: $e;
  height: $f;
  background-color: $g;
  transition: all $time ease;
}

// for hiding the small tick box
.checkbox-hack {
  display: none;
}

// Style rules for the .btn class
.btn {
  margin: 15px 0;
}

// Style rules for the .box class
.box {
  @include common(flex, column, center, null, $scale, $scale/2, black);
  position: relative;
  border-radius: $scale/4;
  cursor: pointer;
  border: 2px solid $color-white;
  margin-left: 15px;

  // Style rules for the roller .ball class
  .ball {
    @include common(null, null, null, null, $scale/2, $scale/2, $color-white);
    position: absolute;
    border-radius: 50%;
    border: 2px solid $color-white;
    transform: translateX(-5%);
  }

  // Style rules for the .scene(.sun, .moon) class
  .scene {
    @include common(flex, row, space-between, null, null, null, null);
    padding: 5px 5px 0px 10px;
    svg {
      width: $scale/3;
    }
  }
}

@mixin transition {
  @for $i from 1 through 50 {
    &:nth-child(#{$i}) {
      transition: transform
        1s
        #{$i *
        0.08}s
        cubic-bezier(0.29, 1.4, 0.44, 0.96);
    }
  }
}

@mixin alpha-attribute($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

$main: $color-black;
$text: $color-white;

.drawer-list {
  position: fixed;
  right: 0;
  top: 0;
  height: 100vh;
  width: 80vw;
  transform: translate(100vw, 0);
  /* ie workaround */
  -ms-transform: translatex(-100vw);
  box-sizing: border-box;
  pointer-events: none;
  padding-top: 125px;
  transition: width 475ms ease-out, transform 450ms ease,
  border-radius 0.8s 0.1s ease;
  border-bottom-left-radius: 100vw;
  @include alpha-attribute('background-color', $color-black-shade, $color-black);
  @media (min-width: 768px) {
    width: 40vw;
  }
  ul {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    overflow: auto;
    overflow-x: hidden;
    pointer-events: auto;
    font-family: $font-body;
  }
  li {
    list-style: none;
    text-transform: uppercase;
    pointer-events: auto;
    white-space: nowrap;
    box-sizing: border-box;
    transform: translatex(100vw);
    /* ie workaround */
    -ms-transform: translatex(-100vw);
    &:last-child {
      margin-bottom: 2em;
    }
    a {
      text-decoration: none;
      color: $text;
      text-align: left;
      display: block;
      padding: 1rem;
      font-size: calc(24px - 0.5vw);
      @media (min-width: 768px) {
        text-align: right;
        padding: 0.5rem;
      }
      &:hover {
        cursor: pointer;
        @include alpha-attribute('background-color', $color-black-shade, $color-black-shade);
      }
    }
  }
}

input.hamburger {
  display: none;
  &:checked {
    & ~ .drawer-list {
      transform: translatex(0);
      border-bottom-left-radius: 0;
      li {
        transform: translatex(0);
        @include transition;
        a {
          padding-right: 15px;
        }
      }
    }
    & ~ label {
      > i {
        background-color: transparent;
        transform: rotate(90deg);
        &:before {
          transform: translate(-50%, -50%) rotate(45deg);
        }
        &:after {
          transform: translate(-50%, -50%) rotate(-45deg);
        }
      }
    }
  }
}

label.hamburger {
  justify-self: center;
  align-self: center;
  grid-column: 3/4;
  z-index: 9999;
  position: relative;
  display: block;
  height: 50px;
  width: 50px;
  &:hover {
    cursor: pointer;
  }
  > i {
    position: absolute;
    width: 100%;
    height: 2px;
    top: 50%;
    background-color: $color-green;
    pointer-events: auto;
    transition-duration: 0.35s;
    transition-delay: 0.35s;
    &:before,
    &:after {
      position: absolute;
      display: block;
      width: 50%;
      height: 2px;
      left: 50%;
      background-color: $color-green;
      content: '';
      transition: transform 0.35s;
      transform-origin: 50% 50%;
    }
    &:before {
      transform: translate(-50%, -14px);
    }
    &:after {
      transform: translate(-50%, 14px);
    }
  }
}

.emoji {
  font-size: 2em;
  margin-left: 1em;
}

.toggle-text {
  color: $color-white;
}

.landing-page {
  margin: $double-spacing;

  p:nth-of-type(1) {
    color: $color-green;
  }

  h2 {
    color: $color-green;
  }

  .job-title {
    color: $color-green;
  }
}

footer {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  margin-top: $double-spacing;

  a {
    margin-top: $pixel-spacing;
    justify-self: center;
    align-self: center;
    font-size: 3em;
    .fa-linkedin-in {
      color: $color-grey;
    }

    .fa-instagram {
      color: $color-grey;
    }

    .fa-github {
      color: $color-grey;
    }
  }

  p {
    grid-column: 1/4;
    justify-self: center;
  }
}
